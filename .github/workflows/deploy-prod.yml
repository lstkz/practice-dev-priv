name: deploy-prod
on:
  pull_request:
    branches: [master]
  # push:
  #   branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: install pulumi
        run: curl -fsSL https://get.pulumi.com | sh

      - name: install yarn
        run: yarn install --frozen-lockfile

      - name: install yarn in deploy
        run: |
          cd deploy
          yarn install --frozen-lockfile
          cd tester-layer/nodejs
          yarn install --frozen-lockfile

      - name: deploy
        run: |
          cd packages/pd-cli
          npm i -g .
          cd ../..
          pd deploy --prod
        env:
          CONFIG_NAME: prod
          PROD_CONFIG_PASSWORD: ${{ secrets.PROD_CONFIG_PASSWORD }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
